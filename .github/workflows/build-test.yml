name: Build and Test

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x' # Specify the .NET version here

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore



      # Run tests and collect coverage
      - name: Test with code coverage
        run: dotnet test ./tests/CIDemoTest/CIDemoTest.csproj --collect:"XPlat Code Coverage" --verbosity normal -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=cobertura

      # Generate a human-readable coverage report
      - name: Generate coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.9
        with:
          reports: '**/coverage.cobertura.xml'
          targetdir: 'coveragereport'
          reporttypes: 'HtmlInline;Cobertura'

      # Upload the report as an artifact
      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coveragereport



      # Statisk kodeanalyse
      - name: Install dotnet format
        run: dotnet tool install -g dotnet-format

      - name: Fix code formatting issues
        run: dotnet format --verbosity diagnostic

      - name: Verify no changes
        run: dotnet format --verify-no-changes --verbosity diagnostic



      # Slack notifications when build fails
      - name: Send notification if build fails
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: "https://hooks.slack.com/services/FAKE/WEBHOOK/PATH"
          SLACK_COLOR: 'danger'
          SLACK_TITLE: 'Build Failed!'
          SLACK_MESSAGE: 'Build failed on branch `${{ github.ref }}`. Check details: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}'


  publish:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    strategy:
      matrix:
        os: [win-x64, linux-x64, osx-x64]

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Publish for ${{ matrix.os }}
        run: dotnet publish ./src/Calculator/Calculator.csproj -c Release -r ${{ matrix.os }} -p:PublishSingleFile=true --self-contained true -o ./publish/${{ matrix.os }}

      - name: Upload platform-specific artifact
        uses: actions/upload-artifact@v4
        with:
          name: calculator-${{ matrix.os }}
          path: ./publish/${{ matrix.os }}



  # NuGet Packaging
  nuget:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Pack NuGet package
        run: dotnet pack ./src/CalculatorLib/CalculatorLib.csproj -c Release -o ./nupkg

      - name: Upload NuGet package
        uses: actions/upload-artifact@v4
        with:
          name: nuget-package
          path: ./nupkg

